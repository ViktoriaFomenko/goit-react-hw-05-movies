{"version":3,"file":"static/js/980.6383747f.chunk.js","mappings":"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","sources":["APIServise.jsx","webpack://react-homework-template/./src/components/MovieSearchForm/MovieSearchForm.module.css?70b3","components/MovieSearchForm/MovieSearchForm.jsx","Pages/Movie/Movie.jsx","webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '81f57ce8a5863d84fdab7c29ba0c37c2';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function FetchTrending() {\n  const URL = `${BASE_URL}/trending/movie/day?api_key=${KEY}&language=en-US&include_adult=false`;\n  const { data } = await axios.get(URL);\n  return data;\n}\n\nexport async function FetchMovieInfo(id) {\n  const URL = `${BASE_URL}/movie/${id}?api_key=${KEY}&language=en-US&include_adult=false`;\n  const { data } = await axios.get(URL);\n  return data;\n}\n\nexport async function SearchMovie(query) {\n  const URL = `${BASE_URL}/search/movie?api_key=${KEY}&query=${query}&language=en-US&include_adult=false`;\n\n  const { data } = await axios.get(URL);\n  return data;\n}\n\nexport async function MovieCast(id) {\n  const URL = `${BASE_URL}/movie/${id}/credits?api_key=${KEY}&language=en-US&include_adult=false`;\n\n  const { data } = await axios.get(URL);\n  return data;\n}\n\nexport async function MovieReviews(id) {\n  const URL = `${BASE_URL}/movie/${id}/reviews?api_key=${KEY}&language=en-US&include_adult=false`;\n\n  const { data } = await axios.get(URL);\n  return data;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"MovieSearchForm_form__PD1EN\",\"btn\":\"MovieSearchForm_btn__akjwk\"};","import { useState } from 'react';\nimport { FiSearch } from 'react-icons/fi';\nimport css from '../MovieSearchForm/MovieSearchForm.module.css';\n\nexport const MovieSearchForm = ({ onSubmit }) => {\n  const [state, setState] = useState({\n    query: '',\n  });\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setState({\n      ...state,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit({ ...state });\n    setState({\n      query: '',\n    });\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <input\n        name=\"query\"\n        value={state.query}\n        onChange={handleChange}\n        placeholder=\"Search movie\"\n        required\n      />\n      <button className={css.btn} type=\"submit\">\n        <FiSearch size=\"12px\" />\n      </button>\n    </form>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { MovieSearchForm } from 'components/MovieSearchForm/MovieSearchForm';\nimport { SearchMovie } from 'APIServise';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Movie = () => {\n  const [state, setState] = useState({\n    items: [],\n    loading: false,\n    error: null,\n  });\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    const FetchMovies = async () => {\n      try {\n        setState(prevState => ({\n          ...prevState,\n          loading: true,\n        }));\n\n        const data = await SearchMovie(query);\n        setState(prevState => ({\n          ...prevState,\n          items: data.results,\n        }));\n      } catch (error) {\n        setState(prevState => ({\n          ...prevState,\n          error,\n        }));\n      } finally {\n        setState(prevState => ({\n          ...prevState,\n          loading: false,\n        }));\n      }\n    };\n\n    if (query) {\n      FetchMovies();\n    }\n  }, [query]);\n\n  const changeSearch = ({ query }) => {\n    setSearchParams({ query });\n  };\n\n  const { items, loading, error } = state;\n\n  return (\n    <div>\n      <MovieSearchForm onSubmit={changeSearch} />\n      {items.length > 0 && <MovieList items={items} />}\n      {loading && <Loader />}\n      {error && <p>...Movies load failed</p>}\n    </div>\n  );\n};\n\nexport default Movie;\n","// extracted by mini-css-extract-plugin\nexport default {\"movie_list\":\"MovieList_movie_list__IWl2j\",\"movie_item\":\"MovieList_movie_item__Q205J\",\"movie\":\"MovieList_movie__gYq3N\"};","import { Link, useLocation } from 'react-router-dom';\nimport no_poster from '../../images/no-poster-available.jpg';\nimport css from '../MovieList/MovieList.module.css';\n\nexport const MovieList = ({ items }) => {\n  const location = useLocation();\n  const elements = items.map(({ id, title, poster_path }) => (\n    <li key={id} className={css.movie_item}>\n      <Link\n        state={{ from: location }}\n        to={`/movies/${id}`}\n        className={css.movie}\n      >\n        <img\n          width=\"200px\"\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500${poster_path}`\n              : no_poster\n          }\n          alt={title}\n        />\n        <p>{title}</p>\n      </Link>\n    </li>\n  ));\n\n  return <ul className={css.movie_list}>{elements}</ul>;\n};\n\nMovieList.defaultProps = {\n  items: [],\n};\n"],"names":["KEY","BASE_URL","FetchTrending","URL","axios","data","FetchMovieInfo","id","SearchMovie","query","MovieCast","MovieReviews","MovieSearchForm","onSubmit","useState","state","setState","className","css","event","preventDefault","name","value","onChange","target","placeholder","required","type","size","items","loading","error","useSearchParams","searchParams","setSearchParams","get","useEffect","FetchMovies","prevState","results","length","MovieList","Loader","location","useLocation","elements","map","title","poster_path","from","to","width","src","no_poster","alt","defaultProps"],"sourceRoot":""}