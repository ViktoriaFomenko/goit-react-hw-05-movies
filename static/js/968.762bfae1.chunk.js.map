{"version":3,"file":"static/js/968.762bfae1.chunk.js","mappings":"2TAEMA,EAAM,mCACNC,EAAW,+BAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+FACCC,EADD,UACUF,EADV,uCACiDD,EADjD,gDAEkBI,IAAAA,IAAUD,GAF5B,uBAEGE,EAFH,EAEGA,KAFH,kBAGEA,GAHF,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,kFACCJ,EADD,UACUF,EADV,kBAC4BM,EAD5B,oBAC0CP,EAD1C,gDAEkBI,IAAAA,IAAUD,GAF5B,uBAEGE,EAFH,EAEGA,KAFH,kBAGEA,GAHF,kEAMA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,kFACCN,EADD,UACUF,EADV,iCAC2CD,EAD3C,kBACwDS,EADxD,gDAGkBL,IAAAA,IAAUD,GAH5B,uBAGGE,EAHH,EAGGA,KAHH,kBAIEA,GAJF,kEAOA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAyBH,GAAzB,kFACCJ,EADD,UACUF,EADV,kBAC4BM,EAD5B,4BACkDP,EADlD,gDAGkBI,IAAAA,IAAUD,GAH5B,uBAGGE,EAHH,EAGGA,KAHH,kBAIEA,GAJF,kEAOA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA4BJ,GAA5B,kFACCJ,EADD,UACUF,EADV,kBAC4BM,EAD5B,4BACkDP,EADlD,gDAGkBI,IAAAA,IAAUD,GAH5B,uBAGGE,EAHH,EAGGA,KAHH,kBAIEA,GAJF,kE,kICyCP,UAnEsB,WACpB,OAA0BO,EAAAA,EAAAA,UAAS,CACjCC,MAAO,GACPC,SAAS,EACTC,MAAO,OAHT,eAAOC,EAAP,KAAcC,EAAd,KAKQV,GAAOW,EAAAA,EAAAA,MAAPX,IAERY,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,oGAEpBH,GAAS,SAAAI,GAAS,yBACbA,GADa,IAEhBP,SAAS,EACTC,MAAO,MAHS,IAFE,UAQDL,EAAAA,EAAAA,IAAUH,GART,OAQdF,EARc,OASpBiB,QAAQC,IAAIlB,GACZY,GAAS,SAAAI,GAAS,yBACbA,GADa,IAEhBR,MAAOR,EAAKmB,MAFI,IAIlBF,QAAQC,IAAIlB,EAAKmB,MAdG,kDAgBpBP,GAAS,SAAAI,GAAS,yBACbA,GADa,IAEhBN,MAAK,MAFW,IAhBE,yBAqBpBE,GAAS,SAAAI,GACP,OAAO,kBACFA,GADL,IAEEP,SAAS,GAEZ,IA1BmB,6EAAH,qDA8BrBM,GACD,GAAE,CAACH,EAAUV,IAEd,IAAQM,EAAUG,EAAVH,MAER,OACE,gBAAKY,UAAU,YAAf,UACE,wBACGZ,EAAMa,KAAI,SAAAC,GAAI,OACb,2BACE,gBACEC,MAAM,QACNC,IACEF,EAAKG,aAAL,yCACsCH,EAAKG,cACvCC,EAENC,IAAKL,EAAKM,QAEZ,uBAAIN,EAAKM,QACT,uCAAeN,EAAKO,eAXb3B,EADI,OAkBtB,C","sources":["APIServise.jsx","Pages/MovieInfo/MovieInfoCast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '81f57ce8a5863d84fdab7c29ba0c37c2';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function FetchTrending() {\n  const URL = `${BASE_URL}/trending/movie/day?api_key=${KEY}&language=en-US&include_adult=false`;\n  const { data } = await axios.get(URL);\n  return data;\n}\n\nexport async function FetchMovieInfo(id) {\n  const URL = `${BASE_URL}/movie/${id}?api_key=${KEY}&language=en-US&include_adult=false`;\n  const { data } = await axios.get(URL);\n  return data;\n}\n\nexport async function SearchMovie(query) {\n  const URL = `${BASE_URL}/search/movie?api_key=${KEY}&query=${query}&language=en-US&include_adult=false`;\n\n  const { data } = await axios.get(URL);\n  return data;\n}\n\nexport async function MovieCast(id) {\n  const URL = `${BASE_URL}/movie/${id}/credits?api_key=${KEY}&language=en-US&include_adult=false`;\n\n  const { data } = await axios.get(URL);\n  return data;\n}\n\nexport async function MovieReviews(id) {\n  const URL = `${BASE_URL}/movie/${id}/reviews?api_key=${KEY}&language=en-US&include_adult=false`;\n\n  const { data } = await axios.get(URL);\n  return data;\n}\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { MovieCast } from 'APIServise';\nimport no_image from '../../images/No_Image_Available.jpg';\n\nconst MovieInfoCast = () => {\n  const [state, setState] = useState({\n    items: [],\n    loading: false,\n    error: null,\n  });\n  const { id } = useParams();\n\n  useEffect(() => {\n    const SingleMovieInfo = async () => {\n      try {\n        setState(prevState => ({\n          ...prevState,\n          loading: true,\n          error: null,\n        }));\n\n        const data = await MovieCast(id);\n        console.log(data);\n        setState(prevState => ({\n          ...prevState,\n          items: data.cast,\n        }));\n        console.log(data.cast);\n      } catch (error) {\n        setState(prevState => ({\n          ...prevState,\n          error,\n        }));\n      } finally {\n        setState(prevState => {\n          return {\n            ...prevState,\n            loading: false,\n          };\n        });\n      }\n    };\n\n    SingleMovieInfo();\n  }, [setState, id]);\n\n  const { items } = state;\n\n  return (\n    <div className=\"container\">\n      <ul>\n        {items.map(item => (\n          <li key={id}>\n            <img\n              width=\"150px\"\n              src={\n                item.profile_path\n                  ? `https://image.tmdb.org/t/p/w500${item.profile_path}`\n                  : no_image\n              }\n              alt={item.name}\n            />\n            <p>{item.name}</p>\n            <p>Character: {item.character}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default MovieInfoCast;\n"],"names":["KEY","BASE_URL","FetchTrending","URL","axios","data","FetchMovieInfo","id","SearchMovie","query","MovieCast","MovieReviews","useState","items","loading","error","state","setState","useParams","useEffect","SingleMovieInfo","prevState","console","log","cast","className","map","item","width","src","profile_path","no_image","alt","name","character"],"sourceRoot":""}